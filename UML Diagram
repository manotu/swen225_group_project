============================================================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                                CLUEDO
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================================================

class Cluedo
{
  1-->1 Board board;
  1-->21 Card cards;
  1-->3..6 Player players;
  1-->6 WeaponToken weaponTokens;
  1-->6 CharacterToken characterTokens;
  1-->1 Triple envelope;
  
public void restart(){

}
  
public void gameOver(){
}

  public void dealCardsToPlayers(){
}

  public void initializeCards(){
}

  public void setMurderCircumstances(){
}

  public void initializePlayers(){
}

  public void distributeTokensToPlayers(){
}

  public void initializeTokens(){
}

  public boolean runGame(){
}

}

============================================================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                                BOARD
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================================================



class Board
{
  const int ROWS = 25;
  const int COLS = 24;
  1-->600 Area board;
  
  public void loadFile(){
  }
  
  public void placeWeaponTokens(List<Token> weaponTokens){
  }
  
  public void placePlayerTokens(List<CharacterToken> characterTokens) {
  }
  
  public void display(){
  }
  
  public Area getArea(x, y) {
  }
  
}

============================================================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                                 AREA
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================================================

abstract class Area
{
  1--> Entrance entrances;
  1--> Token tokens;
  
  public Token tokenAt(int row, int col){   
  }
  
  public boolean addToken(Token token){
  }
  
  public List<Token> getTokens(){
  }
  
  public boolean removeToken(Token token){
  }
  
  public List<Entrance> getEntrances(){
  }
  
  public boolean addEntrance(Entrance entrance){
  }
  
  public Entrance entranceAt(int row, int col) {
  }
  
  public abstract String symbol();
  
  public String print(int row, int col){
  }
}

============================================================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                              CORRIDOR
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================================================


class Corridor
{
  isA Area;
  
  public String symbol(){
  }
}

============================================================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                             INACCESSIBLE
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================================================


class Inaccessible
{
  isA Area;
  
  public String symbol(){
  }
}

============================================================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                                ROOM
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================================================


class Room
{
   1-->1 Description description;
   isA Area;
   
   public String symbol() {
   }

   public Description getDescription() {
   }
}

============================================================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                             DESCRIPTION
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================================================

enum Desciption{
//Enums for weapons
//Enums for Characters
//Enums for Rooms

1-->1 Type type;
 
public boolean isAWeapon() {
}

public boolean isACharacter() {
}

public boolean isARoom() {
}
============================================================================================
                                                TYPE
============================================================================================
enum Type{
//ENUM, 3 categories
//WEAPON, CHARACTER, ROOM
}

}


============================================================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                               CARD
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================================================
class Card{

1-->1 Description description;

}


============================================================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                             TOKEN
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================================================

public class Token{

int row, col;
1--> Description description;

public void reallocate(Room room) {
}

public void setRow(int row) {
}

public void setCol(int col) {
}

public int getRow() {
}

public int getCol() {
}

public String symbol() {
}
}

============================================================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                         CHARACTERTOKEN
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================================================

public class CharacterToken{

isA Token;

1-->* Position visitedPositions;

public void clearVisitedPositions(){
}

public void addVisitedPosition(int row, int col){
}

public String symbol() {
}

public boolean moveUp(Board board) {
}

public boolean moveDown(Board board) {
}

public boolean moveLeft(Board board) {
}

public boolean moveRight(Board board) {
}

public boolean isValidMove(int destRow, int destCol, Board board) {
}

public boolean cannotMove(Board board) {
}

============================================================================================
                                          POSITION
============================================================================================
class Position{
int row, col;

public boolean equals(Object o) {
}

public int hashCode() {
}

}

}

============================================================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                           TRIPLE
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================================================

public class Triple{

1-->1 Card weapon;
1-->1 Card room;
1-->1 Card character;
}

============================================================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                            PLAYER
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================================================

public class Player{

1-->1 CharacterToken characterToken;
1-->3..6 Card hand;
1-->1 State state;
1-->1 Board board;

============================================================================================
                                           STATE
============================================================================================
public enum State{
//3 player states, playing, lost, won.
}

public void setCharacterToken(CharacterToken characterToken){
}

public void addToHand(Card card){
}

public int rollDice(){
}

public void moveToken(int moves) {
}

public Triple takeTurn() {
}

public Triple makeSuggestion() {
}

public Card makeRefutation(Triple triple){
}

public State getState(){
}


}
